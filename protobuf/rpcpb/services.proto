syntax = "proto3";
package rpcpb;
option go_package = "github.com/starkzarn/glod/protobuf/rpcpb";

import "commonpb/common.proto";
import "glodpb/sliver.proto";
import "clientpb/client.proto";


service SliverRPC {

    // *** Version ***
    rpc GetVersion(commonpb.Empty) returns (clientpb.Version);

    // *** Operator Commands *** 
    rpc GetOperators(commonpb.Empty) returns (clientpb.Operators);

    // *** Generic ***
    rpc Kill(glodpb.KillReq) returns (commonpb.Empty);
    rpc Reconfigure(glodpb.ReconfigureReq) returns (glodpb.Reconfigure);
    rpc Rename(clientpb.RenameReq) returns (commonpb.Empty);

    // *** Sessions ***
    rpc GetSessions(commonpb.Empty) returns (clientpb.Sessions);

    // *** Beacons ***
    rpc GetBeacons(commonpb.Empty) returns (clientpb.Beacons);
    rpc GetBeacon(clientpb.Beacon) returns (clientpb.Beacon);
    rpc RmBeacon(clientpb.Beacon) returns (commonpb.Empty);
    rpc GetBeaconTasks(clientpb.Beacon) returns (clientpb.BeaconTasks);
    rpc GetBeaconTaskContent(clientpb.BeaconTask) returns (clientpb.BeaconTask);
    rpc CancelBeaconTask(clientpb.BeaconTask) returns (clientpb.BeaconTask);

    // ***Threat monitoring ***
    rpc MonitorStart(commonpb.Empty) returns (commonpb.Response);
    rpc MonitorStop(commonpb.Empty) returns (commonpb.Empty);
    
    // *** Jobs ***
    rpc GetJobs(commonpb.Empty) returns (clientpb.Jobs);
    rpc KillJob(clientpb.KillJobReq) returns (clientpb.KillJob);

    // *** Listeners ***
    rpc StartMTLSListener(clientpb.MTLSListenerReq) returns (clientpb.MTLSListener);
    rpc StartWGListener(clientpb.WGListenerReq) returns (clientpb.WGListener);
    rpc StartDNSListener(clientpb.DNSListenerReq) returns (clientpb.DNSListener);
    rpc StartHTTPSListener(clientpb.HTTPListenerReq) returns (clientpb.HTTPListener);
    rpc StartHTTPListener(clientpb.HTTPListenerReq) returns (clientpb.HTTPListener);

    // *** Stager Listener ***
    rpc StartTCPStagerListener(clientpb.StagerListenerReq) returns(clientpb.StagerListener);
    rpc StartHTTPStagerListener(clientpb.StagerListenerReq) returns(clientpb.StagerListener);

    // *** Loot ***
    rpc LootAdd(clientpb.Loot) returns(clientpb.Loot);
    rpc LootRm(clientpb.Loot) returns(commonpb.Empty);
    rpc LootUpdate(clientpb.Loot) returns(clientpb.Loot);
    rpc LootContent(clientpb.Loot) returns(clientpb.Loot);
    rpc LootAll(commonpb.Empty) returns(clientpb.AllLoot);
    rpc LootAllOf(clientpb.Loot) returns(clientpb.AllLoot);

    // *** Hosts ***
    rpc Hosts(commonpb.Empty) returns(clientpb.AllHosts);
    rpc Host(clientpb.Host) returns(clientpb.Host);
    rpc HostRm(clientpb.Host) returns(commonpb.Empty);
    rpc HostIOCRm(clientpb.IOC) returns(commonpb.Empty);

    // *** Implants ***
    rpc Generate(clientpb.GenerateReq) returns (clientpb.Generate);
    rpc GenerateExternal(clientpb.ExternalGenerateReq) returns (clientpb.ExternalImplantConfig);
    rpc GenerateExternalSaveBuild(clientpb.ExternalImplantBinary) returns (commonpb.Empty);
    rpc GenerateExternalGetImplantConfig(clientpb.ImplantConfig) returns (clientpb.ExternalImplantConfig);
    // rpc BuilderRegister(clientpb.Builder) returns (commonpb.Empty);
    
    rpc BuilderRegister(clientpb.Builder) returns (stream clientpb.Event);
    rpc BuilderTrigger(clientpb.Event) returns (commonpb.Empty);
    rpc Builders(commonpb.Empty) returns (clientpb.Builders);

    rpc Regenerate(clientpb.RegenerateReq) returns (clientpb.Generate);
    rpc ImplantBuilds(commonpb.Empty) returns (clientpb.ImplantBuilds);
    rpc DeleteImplantBuild(clientpb.DeleteReq) returns (commonpb.Empty);
    rpc Canaries(commonpb.Empty) returns (clientpb.Canaries);
    rpc GenerateWGClientConfig(commonpb.Empty) returns (clientpb.WGClientConfig);
    rpc GenerateUniqueIP(commonpb.Empty) returns (clientpb.UniqueWGIP);
    rpc ImplantProfiles(commonpb.Empty) returns (clientpb.ImplantProfiles);
    rpc DeleteImplantProfile(clientpb.DeleteReq) returns (commonpb.Empty);
    rpc SaveImplantProfile(clientpb.ImplantProfile) returns (clientpb.ImplantProfile);
    rpc MsfStage(clientpb.MsfStagerReq) returns (clientpb.MsfStager);
    rpc ShellcodeRDI(clientpb.ShellcodeRDIReq) returns (clientpb.ShellcodeRDI);
    rpc GetCompiler(commonpb.Empty) returns (clientpb.Compiler);
    rpc ShellcodeEncoder(clientpb.ShellcodeEncodeReq) returns (clientpb.ShellcodeEncode);
    rpc ShellcodeEncoderMap(commonpb.Empty) returns (clientpb.ShellcodeEncoderMap);

    // *** Websites ***
    rpc Websites(commonpb.Empty) returns (clientpb.Websites);
    rpc Website(clientpb.Website) returns (clientpb.Website);
    rpc WebsiteRemove(clientpb.Website) returns (commonpb.Empty);
    rpc WebsiteAddContent(clientpb.WebsiteAddContent) returns (clientpb.Website);
    rpc WebsiteUpdateContent(clientpb.WebsiteAddContent) returns (clientpb.Website);
    rpc WebsiteRemoveContent(clientpb.WebsiteRemoveContent) returns (clientpb.Website);

    // *** Session Interactions ***
    rpc Ping(glodpb.Ping) returns (glodpb.Ping);
    rpc Ps(glodpb.PsReq) returns (glodpb.Ps);
    rpc Terminate(glodpb.TerminateReq) returns (glodpb.Terminate);
    rpc Ifconfig(glodpb.IfconfigReq) returns (glodpb.Ifconfig);
    rpc Netstat(glodpb.NetstatReq) returns (glodpb.Netstat);
    rpc Ls(glodpb.LsReq) returns (glodpb.Ls);
    rpc Cd(glodpb.CdReq) returns (glodpb.Pwd);
    rpc Pwd(glodpb.PwdReq) returns (glodpb.Pwd);
    rpc Mv(glodpb.MvReq) returns (glodpb.Mv);
    rpc Rm(glodpb.RmReq) returns (glodpb.Rm);
    rpc Mkdir(glodpb.MkdirReq) returns (glodpb.Mkdir);
    rpc Download(glodpb.DownloadReq) returns (glodpb.Download);
    rpc Upload(glodpb.UploadReq) returns (glodpb.Upload);
    rpc Chmod(glodpb.ChmodReq) returns (glodpb.Chmod);
    rpc Chown(glodpb.ChownReq) returns (glodpb.Chown);
    rpc Chtimes(glodpb.ChtimesReq) returns (glodpb.Chtimes);
    rpc MemfilesList(glodpb.MemfilesListReq) returns (glodpb.Ls);
    rpc MemfilesAdd(glodpb.MemfilesAddReq) returns (glodpb.MemfilesAdd);
    rpc MemfilesRm(glodpb.MemfilesRmReq) returns (glodpb.MemfilesRm);
    rpc ProcessDump(glodpb.ProcessDumpReq) returns (glodpb.ProcessDump);
    rpc RunAs(glodpb.RunAsReq) returns (glodpb.RunAs);
    rpc Impersonate(glodpb.ImpersonateReq) returns (glodpb.Impersonate);
    rpc RevToSelf(glodpb.RevToSelfReq) returns (glodpb.RevToSelf);
    rpc GetSystem(clientpb.GetSystemReq) returns (glodpb.GetSystem);
    rpc Task(glodpb.TaskReq) returns (glodpb.Task);
    rpc Msf(clientpb.MSFReq) returns (glodpb.Task);
    rpc MsfRemote(clientpb.MSFRemoteReq) returns (glodpb.Task);
    rpc ExecuteAssembly(glodpb.ExecuteAssemblyReq) returns (glodpb.ExecuteAssembly);
    rpc Migrate(clientpb.MigrateReq) returns (glodpb.Migrate);
    rpc Execute(glodpb.ExecuteReq) returns (glodpb.Execute);
    rpc ExecuteWindows(glodpb.ExecuteWindowsReq) returns (glodpb.Execute);
    rpc Sideload(glodpb.SideloadReq) returns (glodpb.Sideload);
    rpc SpawnDll(glodpb.InvokeSpawnDllReq) returns (glodpb.SpawnDll);
    rpc Screenshot(glodpb.ScreenshotReq) returns (glodpb.Screenshot);
    rpc CurrentTokenOwner(glodpb.CurrentTokenOwnerReq) returns (glodpb.CurrentTokenOwner);
    
    // *** Pivots ***
    rpc PivotStartListener(glodpb.PivotStartListenerReq) returns (glodpb.PivotListener);
    rpc PivotStopListener(glodpb.PivotStopListenerReq) returns (commonpb.Empty);
    rpc PivotSessionListeners(glodpb.PivotListenersReq) returns (glodpb.PivotListeners);
    rpc PivotGraph(commonpb.Empty) returns (clientpb.PivotGraph);

    rpc StartService(glodpb.StartServiceReq) returns (glodpb.ServiceInfo);
    rpc StopService(glodpb.StopServiceReq) returns (glodpb.ServiceInfo);
    rpc RemoveService(glodpb.RemoveServiceReq) returns (glodpb.ServiceInfo);

    rpc MakeToken(glodpb.MakeTokenReq) returns (glodpb.MakeToken);
    rpc GetEnv(glodpb.EnvReq) returns (glodpb.EnvInfo);
    rpc SetEnv(glodpb.SetEnvReq) returns (glodpb.SetEnv);
    rpc UnsetEnv(glodpb.UnsetEnvReq) returns (glodpb.UnsetEnv);
    rpc Backdoor(glodpb.BackdoorReq) returns (glodpb.Backdoor);
    rpc RegistryRead(glodpb.RegistryReadReq) returns (glodpb.RegistryRead);
    rpc RegistryWrite(glodpb.RegistryWriteReq) returns (glodpb.RegistryWrite);
    rpc RegistryCreateKey(glodpb.RegistryCreateKeyReq) returns (glodpb.RegistryCreateKey);
    rpc RegistryDeleteKey(glodpb.RegistryDeleteKeyReq) returns (glodpb.RegistryDeleteKey);
    rpc RegistryListSubKeys(glodpb.RegistrySubKeyListReq) returns (glodpb.RegistrySubKeyList);
    rpc RegistryListValues(glodpb.RegistryListValuesReq) returns (glodpb.RegistryValuesList);
    rpc RunSSHCommand(glodpb.SSHCommandReq) returns (glodpb.SSHCommand);
    rpc HijackDLL(clientpb.DllHijackReq) returns (clientpb.DllHijack);
    rpc GetPrivs(glodpb.GetPrivsReq) returns (glodpb.GetPrivs);
    rpc StartRportFwdListener(glodpb.RportFwdStartListenerReq) returns (glodpb.RportFwdListener);
    rpc GetRportFwdListeners(glodpb.RportFwdListenersReq) returns (glodpb.RportFwdListeners);
    rpc StopRportFwdListener(glodpb.RportFwdStopListenerReq) returns (glodpb.RportFwdListener);

    // Beacon only commands
    rpc OpenSession(glodpb.OpenSession) returns (glodpb.OpenSession);
    rpc CloseSession(glodpb.CloseSession) returns (commonpb.Empty);
    
    // Extensions
    rpc RegisterExtension(glodpb.RegisterExtensionReq) returns (glodpb.RegisterExtension);
    rpc CallExtension(glodpb.CallExtensionReq) returns (glodpb.CallExtension);
    rpc ListExtensions(glodpb.ListExtensionsReq) returns (glodpb.ListExtensions);
    
    // *** Wireguard Specific ***
    rpc WGStartPortForward(glodpb.WGPortForwardStartReq) returns (glodpb.WGPortForward);
    rpc WGStopPortForward(glodpb.WGPortForwardStopReq) returns (glodpb.WGPortForward);
    rpc WGStartSocks(glodpb.WGSocksStartReq) returns (glodpb.WGSocks);
    rpc WGStopSocks(glodpb.WGSocksStopReq) returns (glodpb.WGSocks);
    rpc WGListForwarders(glodpb.WGTCPForwardersReq) returns (glodpb.WGTCPForwarders);
    rpc WGListSocksServers(glodpb.WGSocksServersReq) returns (glodpb.WGSocksServers);

    // *** Realtime Commands ***
    rpc Shell(glodpb.ShellReq) returns (glodpb.Shell);
    rpc Portfwd(glodpb.PortfwdReq) returns (glodpb.Portfwd);

    // *** Socks5 ***
    rpc CreateSocks(glodpb.Socks) returns (glodpb.Socks);
    rpc CloseSocks(glodpb.Socks) returns (commonpb.Empty);
    rpc SocksProxy(stream glodpb.SocksData) returns (stream glodpb.SocksData);

    // *** Tunnels ***
    rpc CreateTunnel(glodpb.Tunnel) returns (glodpb.Tunnel);
    rpc CloseTunnel(glodpb.Tunnel) returns (commonpb.Empty);
    rpc TunnelData(stream glodpb.TunnelData) returns (stream glodpb.TunnelData);

    // *** Events ***
    rpc Events(commonpb.Empty) returns (stream clientpb.Event);
}
